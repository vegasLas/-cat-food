{"version":3,"sources":["serviceWorker.js","redux/reducer.js","redux/redux-store.js","components/Packet.jsx","App.jsx","AppContainer.jsx","index.js"],"names":["Boolean","window","location","hostname","match","updateObjectInArray","packets","packId","objPropName","toggle","map","u","initialState","id","name","customer","filling","portion","prize","weight","signature","link","undertext","isPresence","onMouseOut","packetsReducer","state","action","type","reducers","combineReducers","packet","store","createStore","Packet","props","selectPacket","unSelectPacket","selectHover","selectHoverTurnOff","className","cn","disabled","onClick","App","packetElement","d","class","AppContainer","this","React","Component","connect","dispatch","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d76d088d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nconst TOGGLE_SELECT = 'TOGGLE_SELECT'\r\nconst TOGGLE_UNSELECT = 'TOGGLE_UNSELECT'\r\nconst TOGGLE_MOUSEOUT = 'TOGGLE_MOUSEOUT'\r\nconst TOGGLE_MOUSEOVER = 'TOGGLE_MOUSEOVER'\r\nconst updateObjectInArray = (packets, packId, objPropName, toggle) => {\r\n    return packets.map((u) => {\r\n        if (u[objPropName] === packId) {\r\n            return { ...u, ...toggle }\r\n        }\r\n        return u\r\n    }\r\n    )\r\n}\r\n\r\n\r\nlet initialState = {\r\n    packets: [\r\n        {\r\n            id: 1,\r\n            name: 'fuagra',\r\n            customer: '',\r\n            filling: 'с фуа-гра',\r\n            portion: '10 порций',\r\n            prize: 'мышь в подарок',\r\n            weight: '0,5',\r\n            toggle: false,\r\n            signature: `Чего сидишь? порадуй котэ`,\r\n            link: 'купи.',\r\n            undertext: 'Печень утки разварная с артишоками.',\r\n            isPresence: false,\r\n            onMouseOut: false\r\n\r\n        },\r\n        {\r\n            id: 0,\r\n            name: 'fish',\r\n            customer: '',\r\n            filling: 'с рыбой',\r\n            portion: '40 порций',\r\n            prize: '2 мыши в подарок',\r\n            weight: '2',\r\n            toggle: false,\r\n            signature: `Чего сидишь? порадуй котэ`,\r\n            link: 'купи.',\r\n            undertext: 'Головы щучьи с чесноком да свежайшая сёмгушка.',\r\n            isPresence: false,\r\n            onMouseOut: false\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'chiken',\r\n            customer: 'заказчик доволен',\r\n            filling: 'с курой',\r\n            portion: '100 порций',\r\n            prize: '5 мышей в подарок',\r\n            weight: '5',\r\n            toggle: false,\r\n            signature: `Чего сидишь? порадуй котэ`,\r\n            link: 'купи.',\r\n            undertext: 'Филе из цеплят с труфелями в бульоне.',\r\n            isPresence: true,\r\n            onMouseOut: false\r\n\r\n\r\n        }\r\n    ],\r\n\r\n}\r\nconst packetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_SELECT:\r\n            return {\r\n                ...state,\r\n                packets: updateObjectInArray(state.packets, action.packId, 'id', { toggle: true })\r\n            }\r\n        case TOGGLE_UNSELECT:\r\n            return {\r\n                ...state,\r\n                packets: updateObjectInArray(state.packets, action.packId, 'id', { toggle: false })\r\n            }\r\n        case TOGGLE_MOUSEOVER: {\r\n            return {\r\n                ...state,\r\n                packets: updateObjectInArray(state.packets, action.packId, 'id', { onMouseOut: true })\r\n            }\r\n        }\r\n        case TOGGLE_MOUSEOUT: {\r\n            return {\r\n                ...state,\r\n                packets: updateObjectInArray(state.packets, action.packId, 'id', { onMouseOut: false })\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const selectPacket = (packId) => ({\r\n    type: TOGGLE_SELECT, packId\r\n})\r\nexport const unSelectPacket = (packId) => ({\r\n    type: TOGGLE_UNSELECT, packId\r\n})\r\nexport const selectHover = (packId) => ({\r\n    type: TOGGLE_MOUSEOVER, packId\r\n})\r\nexport const selectHoverTurnOff = (packId) => ({\r\n    type: TOGGLE_MOUSEOUT, packId\r\n})\r\nexport default packetsReducer","import { createStore, combineReducers } from \"redux\";\r\nimport packetsReducer from \"./reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    packet: packetsReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react'\r\nimport cn from 'classnames'\r\nconst Packet = (props) => {\r\n    let { packet, selectPacket, unSelectPacket, selectHover, selectHoverTurnOff } = props\r\n    let toggleSelect = (id) => {\r\n        unSelectPacket(id)\r\n        selectHoverTurnOff(id)\r\n    }\r\n    return (\r\n        <div className={cn(packet.isPresence ? 'app__column column empty' : \"app__column column presence\", packet.id === 2 ? \"number3\" : null)}>\r\n            <button onMouseOut={packet.toggle ? () => { selectHover(packet.id) } : null} disabled={packet.isPresence ? true : false} onClick={packet.toggle ? () => { toggleSelect(packet.id) } : () => { selectPacket(packet.id) }} className={packet.onMouseOut ? \"column__screen selectHover\" : packet.toggle ? 'column__screen select' : \"column__screen\"}>\r\n                <div className='column__body'>\r\n                    <p className='column__forehead'>\r\n                        <span>Котэ не одобряет?</span>\r\n                        <span>Сказочное заморское яство</span>\r\n                    </p>\r\n                    <h2 className='column__title '>\r\n                        Нямушка\r\n                        <span>\r\n                            {packet.filling}\r\n                        </span>\r\n                    </h2>\r\n                    <div className=\"column__text\">\r\n                        <span>{packet.portion}</span>\r\n                        <span>{packet.prize}</span>\r\n                        <span>{packet.customer}</span>\r\n                    </div>\r\n                    <div className=\"column__weight\">\r\n                        <span>\r\n                            {packet.weight}\r\n                        </span>\r\n                        <span>\r\n                            кг\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </button>\r\n            <div className=\"column__undertext undertext\">\r\n                <div className=\"undertext__default\">\r\n                    {packet.signature} <button onClick={() => { selectPacket(packet.id) }} className={packet.toggle ? ' select' : null} >{packet.link}</button>\r\n                </div>\r\n                <div className=\"undertext__selected\">\r\n                    {packet.undertext}\r\n                </div>\r\n                <div className=\"undertext__disabled\">\r\n                    Печалька {packet.filling} закончился\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Packet","import React from 'react';\r\nimport './App.scss';\r\nimport Packet from './components/Packet';\r\n\r\nconst App = (props) => {\r\n  let packets = props.packets\r\n  let packetElement = packets.map(d => <Packet packet={d} selectHoverTurnOff={props.selectHoverTurnOff} selectHover={props.selectHover} selectPacket={props.selectPacket} unSelectPacket={props.unSelectPacket} />);\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__content\">\r\n        <h1 className=\"app__title\">\r\n          Ты сегодня покормил кота?\r\n        </h1>\r\n        <div class=\"app__columns columns\">\r\n          {packetElement}\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport App from \"./App\";\r\nimport { connect } from 'react-redux';\r\nimport { selectPacket, unSelectPacket, selectHover, selectHoverTurnOff } from './redux/reducer';\r\nclass AppContainer extends React.Component {\r\n\r\n    render() {\r\n        return <>\r\n            <App packets={this.props.packets}\r\n                selectPacket={this.props.selectPacket}\r\n                unSelectPacket={this.props.unSelectPacket}\r\n                selectHover={this.props.selectHover}\r\n                selectHoverTurnOff={this.props.selectHoverTurnOff}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mstp = (state) => {\r\n    return ({\r\n        packets: state.packet.packets\r\n    })\r\n}\r\nlet mdtp = (dispatch) => {\r\n    return {\r\n        selectPacket: (id) => {\r\n            dispatch(selectPacket(id));\r\n        },\r\n        unSelectPacket: (id) => {\r\n            dispatch(unSelectPacket(id));\r\n        },\r\n        selectHover: (id) => {\r\n            dispatch(selectHover(id));\r\n        },\r\n        selectHoverTurnOff: (id) => {\r\n            dispatch(selectHoverTurnOff(id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mstp, mdtp)(AppContainer);\r\n","import 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/redux-store';\r\nimport AppContainer from './AppContainer';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}